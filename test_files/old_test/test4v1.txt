Plan:
User Instruction: Place the cereal and a bowl side by side on the kitchen island
---
The following is a pre thinking process for the user instruction. It is not necessarily right especially the Positions. But use it as a foundation for your task:
<thinking>- **Initial stage:**  
    - **Cereal box:** Located on the ground approximately at position **[1.4, 1, 0.95]**.
    - **Bowl:** Located on the ground approximately at position **[1.4, 0.50, 0.89]**.
    - **PR2 Robot:** Positioned near the objects, approximately at position **[1.4, 0.75, 0]**.

- **Goal stage:**  
    - **Cereal box:** Located on the kitchen island surface.
    - **Bowl:** Located on the kitchen island surface, beside the cereal box.

- **Step-by-step plan:**

    1. **Robot positioning:**
    - **Action:** The PR2 robot moves to position **[1.4, 0.75, 0]**, near the cereal box and bowl.
    
    2. **Grabbing the cereal box:**
    - **Action:** The robot navigates to the cereal box at **[1.4, 1, 0.95]**.
    - **Action:** Securely grab the cereal box.

    3. **Placing the cereal box on the island:**
    - **Action:** The robot transports the cereal box to the kitchen island.
    - **Action:** Carefully place the cereal box on the kitchen island surface.

    4. **Grabbing the bowl:**
    - **Action:** The robot navigates to the bowl at **[1.4, 0.50, 0.89]**.
    - **Action:** Securely grab the bowl.

    5. **Placing the bowl on the island:**
    - **Action:** The robot transports the bowl to the kitchen island.
    - **Action:** Carefully place the bowl on the kitchen island surface, beside the cereal box.

    6. **Task completion:**
    - **Action:** Finish the task and return to the initial position or prepare for the next instruction.

**Note:** The exact positions for placing the objects on the kitchen island are not specified in the world knowledge or URDF file. The robot would need to use its perception capabilities to determine suitable locations on the island surface to place the objects side by side. 
</thinking>


World Knowledge:
<world_knowledge>
[kitchen = Object('kitchen', ObjectType.ENVIRONMENT, 'kitchen.urdf'), 
robot = Object('pr2', ObjectType.ROBOT, 'pr2.urdf')
bowl = Object('bowl', ObjectType.BOWL, 'bowl.stl', pose=Pose([1.4, 0.50, 0.89]), 
color=[1, 1, 0, 1]),
cereal = Object('cereal', ObjectType.BREAKFAST_CEREAL, 'breakfast_cereal.stl', 
pose=Pose([1.4, 1, 0.95]))]
</world_knowledge>

PyCramPlanCode:
<code>
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.process_module import simulated_robot
from pycram.designators.motion_designator import *
from pycram.designators.location_designator import *
from pycram.designators.action_designator import *
from pycram.designators.object_designator import *
from pycram.datastructures.enums import ObjectType, Arms, Grasp, WorldMode
from pycram.datastructures.pose import Pose
# Initialize the BulletWorld
world = BulletWorld(WorldMode.GUI)

# Define the kitchen environment and objects
kitchen = Object("kitchen", ObjectType.ENVIRONMENT, "kitchen.urdf")
robot = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
cereal = Object("cereal", ObjectType.BREAKFAST_CEREAL, "breakfast_cereal.stl", pose=Pose([1.4, 1, 0.95]))
bowl = Object("bowl", ObjectType.BOWL, "bowl.stl", pose=Pose([1.4, 0.50, 0.89]), color=[1, 1, 0, 1])

# Create object designators
cereal_desig = ObjectDesignatorDescription(names=["cereal"])
bowl_desig = ObjectDesignatorDescription(names=["bowl"])
kitchen_desig = ObjectDesignatorDescription(names=["kitchen"])
robot_desig = ObjectDesignatorDescription(names=["pr2"]).resolve()

with simulated_robot:
    ParkArmsAction([Arms.BOTH]).resolve().perform()
    MoveTorsoAction([0.25]).resolve().perform()

    # Navigate to the cereal
    pickup_pose_cereal = CostmapLocation(target=cereal_desig.resolve(), reachable_for=robot_desig).resolve()
    pickup_arm_cereal = pickup_pose_cereal.reachable_arms[0]
    NavigateAction(target_locations=[pickup_pose_cereal.pose]).resolve().perform()
    PickUpAction(object_designator_description=cereal_desig, arms=[pickup_arm_cereal], grasps=[Grasp.FRONT]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Place the cereal on the kitchen island
    place_island_cereal = SemanticCostmapLocation("kitchen_island_surface", kitchen_desig.resolve(), cereal_desig.resolve()).resolve()
    place_stand_cereal = CostmapLocation(place_island_cereal.pose, reachable_for=robot_desig, reachable_arm=pickup_arm_cereal).resolve()
    NavigateAction(target_locations=[place_stand_cereal.pose]).resolve().perform()
    PlaceAction(cereal_desig, target_locations=[place_island_cereal.pose], arms=[pickup_arm_cereal]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Navigate to the bowl
    pickup_pose_bowl = CostmapLocation(target=bowl_desig.resolve(), reachable_for=robot_desig).resolve()
    pickup_arm_bowl = pickup_pose_bowl.reachable_arms[0]
    NavigateAction(target_locations=[pickup_pose_bowl.pose]).resolve().perform()
    PickUpAction(object_designator_description=bowl_desig, arms=[pickup_arm_bowl], grasps=[Grasp.FRONT]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Place the bowl on the kitchen island next to the cereal
    place_island_bowl = SemanticCostmapLocation("kitchen_island_surface", kitchen_desig.resolve(), bowl_desig.resolve()).resolve()
    place_stand_bowl = CostmapLocation(place_island_bowl.pose, reachable_for=robot_desig, reachable_arm=pickup_arm_bowl).resolve()
    NavigateAction(target_locations=[place_stand_bowl.pose]).resolve().perform()
    PlaceAction(bowl_desig, target_locations=[place_island_bowl.pose], arms=[pickup_arm_bowl]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

# Close the BulletWorld
world.exit()
</code>

This is the corresponding plan:
Plan 1: Get the URDF file of the kitchen. #E1 = URDF[kitchen.urdf]
Plan 2: Get the URDF file of the pr2 robot. #E2 = URDF[pr2.urdf]
Plan 3: Create a object designator for the cereal, bowl, kitchen and the robot object. #E3 = Retrieve[How to create an object designator in PyCram?]
Plan 4: Retrieve the method for navigating the robot to the cereal. #E4 = Retrieve[How to navigate the robot to a specific position in PyCram?]
Plan 5: Retrieve the method to locate and pick up the cereal. #E5 = Retrieve[How to locate an object and pick it up?]
Plan 6: Retrieve the procedure for finding a suitable position to place the cereal on the kitchen island. #E6 = Retrieve[How to find a suitable position for placing an object in PyCram, specifically on a surface like a kitchen island?] 
Plan 7: Retrieve the method for placing the cereal on the kitchen island. #E7 = Retrieve[How to place an object at a specific position in PyCram?]
Plan 8: Retrieve the method for navigating the robot to the bowl. #E8 = Retrieve[How to navigate the robot to a specific position in PyCram?]
Plan 9: Retrieve the method to locate and pick up the bowl. #E9 = Retrieve[How to locate an object and pick it up?]
Plan 10: Retrieve the procedure for finding a suitable position to place the bowl on the kitchen island next to the cereal. #E10 = Retrieve[How can I find a suitable position to place an object next to another object on a surface in PyCram, considering factors like object dimensions and collision avoidance?]
Plan 11: Retrieve the method for placing the bowl on the kitchen island beside the cereal. #E11 = Retrieve[How to place an object at a specific position in PyCram?]
Plan 12: Close the BulletWorld. #E12 = Retrieve[How do I close the BulletWorld in PyCram?] 


----
Filled Plan:
Plan: Get the URDF file of the kitchen.
Content from: #<IAI_kitchen.urdf>#
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from IAI_kitchen.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="iai_oven_area" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="room_link">    
  </link>
  <!--- FIXME THIS should NOT be here -->
  <link name="sink_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="sink_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/SinkArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 1.3 0"/>
    <child link="sink_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="sink_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 1.03 0.41"/>
    <parent link="sink_area_footprint"/>
    <child link="sink_area"/>
  </joint>
  <link name="sink_area_sink">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Sink.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_sink_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.005 0.47 0.4414"/>
    <parent link="sink_area"/>
    <child link="sink_area_sink"/>
  </joint>
  <link name="sink_area_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.28 0.7 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_right_panel"/>
  </joint>
  <link name="sink_area_trash_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_trash_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_trash_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 0.7 -0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_trash_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_trash_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="sink_area_trash_drawer_main"/>
    <child link="sink_area_trash_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="sink_area_left_upper_drawer_main"/>
    <child link="sink_area_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_middle_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_middle_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_middle_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.11 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_middle_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_middle_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_middle_drawer_main"/>
    <child link="sink_area_left_middle_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_bottom_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_bottom_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_bottom_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 -0.18 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_bottom_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_bottom_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_bottom_drawer_main"/>
    <child link="sink_area_left_bottom_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_dish_washer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasher.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasherDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_dish_washer_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.01 0.1 0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_dish_washer_main"/>
  </joint>
  <joint name="sink_area_dish_washer_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.27 0. -0.325"/>
    <parent link="sink_area_dish_washer_main"/>
    <child link="sink_area_dish_washer_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="sink_area_dish_washer_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.0625 -0.6325 0."/>
    <parent link="sink_area_dish_washer_door"/>
    <child link="sink_area_dish_washer_door_handle"/>
  </joint>
  <link name="oven_area_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="oven_area_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/OvenArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.805 2.5 0"/>
    <child link="oven_area_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="oven_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 0.6 0.755"/>
    <parent link="oven_area_area_footprint"/>
    <child link="oven_area_area"/>
  </joint>
  <link name="oven_area_oven_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenMain.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenPanel.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.415"/>
    <parent link="oven_area_area"/>
    <child link="oven_area_oven_main"/>
  </joint>
  <joint name="oven_area_oven_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.2737 0. -0.2614"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.05876 -0.39803 0."/>
    <parent link="oven_area_oven_door"/>
    <child link="oven_area_oven_door_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.27 0 0.2449"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_panel"/>
  </joint>
  <link name="oven_area_oven_knob_stove_1">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_1_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.21 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_1"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_2">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_2_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.14 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_2"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_3">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_3_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.07 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_3"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_4">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_4_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.0 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_4"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_oven">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_oven_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 0.16 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_oven"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. 0.045 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="oven_area_area_middle_upper_drawer_main"/>
    <child link="oven_area_area_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. -0.315 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="oven_area_area_middle_lower_drawer_main"/>
    <child link="oven_area_area_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_left_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_left_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_left_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_left_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_left_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_left_drawer_main"/>
    <child link="oven_area_area_left_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_right_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_right_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_right_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_right_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_right_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_right_drawer_main"/>
    <child link="oven_area_area_right_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="kitchen_island">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/IslandArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-1.365 0.59 0"/>
    <child link="kitchen_island_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="kitchen_island_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2975 1.1292 0.421"/>
    <parent link="kitchen_island_footprint"/>
    <child link="kitchen_island"/>
  </joint>
  <link name="kitchen_island_stove">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Stove.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_stove_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.025 0.7658 0.4315"/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_stove"/>
  </joint>
  <link name="kitchen_island_left_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 -0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_panel"/>
  </joint>
  <link name="kitchen_island_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_upper_drawer_main"/>
    <child link="kitchen_island_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_left_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_lower_drawer_main"/>
    <child link="kitchen_island_left_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_panel"/>
  </joint>
  <link name="kitchen_island_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_upper_drawer_main"/>
    <child link="kitchen_island_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_lower_drawer_main"/>
    <child link="kitchen_island_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_panel"/>
  </joint>
  <link name="kitchen_island_right_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_upper_drawer_main"/>
    <child link="kitchen_island_right_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_lower_drawer_main"/>
    <child link="kitchen_island_right_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="fridge_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="fridge_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/FridgeArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 -0.76 0"/>
    <child link="fridge_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="fridge_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 .3 0.74"/>
    <parent link="fridge_area_footprint"/>
    <child link="fridge_area"/>
  </joint>
  <link name="fridge_area_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="fridge_area_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.0 -0.4175 "/>
    <parent link="fridge_area"/>
    <child link="fridge_area_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="fridge_area_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="fridge_area_lower_drawer_main"/>
    <child link="fridge_area_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="iai_fridge_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Fridge.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/FridgeDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle90.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="iai_fridge_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="fridge_area"/>
    <child link="iai_fridge_main"/>
  </joint>
  <joint name="iai_fridge_door_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.29 0.3 0.245"/>
    <parent link="iai_fridge_main"/>
    <child link="iai_fridge_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="iai_fridge_door_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 -0.57 0."/>
    <parent link="iai_fridge_door"/>
    <child link="iai_fridge_door_handle"/>
  </joint>
  <!--
  <iai_sink_area name="sink_area" parent="room_link">
    <origin xyz="-5.29 -5.65 0" rpy="0 0 0" />    
  </iai_sink_area>
  
  <iai_oven_area name="oven_area" parent="room_link">
    <origin xyz="-5.27 -6.85 0" rpy="0 0 0" />    
  </iai_oven_area>
  
  
  <iai_kitchen_island name="kitchen_island" parent="room_link">
    <origin xyz="-2.1 -4.94 0" rpy="0 0 ${pi}" />    
  </iai_kitchen_island>
  
  <iai_fridge_area name="fridge_area" parent="room_link">
    <origin xyz="-5.29 -3.59 0" rpy="0 0 0" />    
  </iai_fridge_area>
  -->
</robot>


 = URDF[kitchen.urdf]Plan: Get the URDF file of the pr2 robot.
Content from: #<plane.urdf>#
<?xml version="0.0" ?>
<robot name="plane">
  <link name="planeLink">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
       <mass value=".0"/>
       <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
				<mesh filename="plane.obj" scale="1 1 1"/>
      </geometry>
       <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -5"/>
      <geometry>
	 	<box size="3000 3000 10"/>
            </geometry>
    </collision>
  </link>
</robot>



 = URDF[pr2.urdf]Plan: Create a object designator for the cereal, bowl, kitchen and the robot object.
# Creating an Object Designator in PyCram

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to create an object designator in the PyCram framework. An object designator is a symbolic representation of an object within the simulated environment (BulletWorld) or the real world. It allows the robot to identify and interact with specific objects based on their properties, such as names or types.

### Explain the Goal
The primary objective of creating an object designator is to enable the robot to recognize and manipulate objects in its environment. This is crucial for tasks such as picking up, placing, or interacting with objects, which are fundamental capabilities for robotic systems. By using object designators, developers can create more flexible and intelligent robotic behaviors.

### Prerequisites and Setup
Before creating an object designator, ensure that you have the following prerequisites:

1. **PyCram Installation**: Ensure that the PyCram framework is installed in your Python environment. You can install it using pip:
   ```bash
   pip install pycram
   ```

2. **BulletWorld Setup**: You need to create a BulletWorld instance where the objects will be defined. This can be done with the following code:
   ```python
   from pycram.worlds.bullet_world import BulletWorld
   from pycram.datastructures.enums import WorldMode

   world = BulletWorld(WorldMode.GUI)  # Create a BulletWorld in GUI mode
   ```

3. **Object Definitions**: Define the objects you want to work with in the BulletWorld. For example:
   ```python
   from pycram.world_concepts.world_object import Object
   from pycram.datastructures.pose import Pose
   from pycram.datastructures.enums import ObjectType

   # Create some objects in the BulletWorld
   milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))
   cereal = Object("froot_loops", ObjectType.BREAKFAST_CEREAL, "breakfast_cereal.stl", pose=Pose([1.3, 0.9, 0.95]))
   spoon = Object("spoon", ObjectType.SPOON, "spoon.stl", pose=Pose([1.3, 1.1, 0.87]))
   ```

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Import Necessary Modules
To create an object designator, you need to import the relevant classes from the PyCram framework:
```python
from pycram.designators.object_designator import BelieveObject
```

#### Step 2: Create an Object Designator Description
You can create an object designator description using the `BelieveObject` class. This class allows you to specify the objects you want to describe based on their names or types.

- **Using Names**: If you want to create a designator for a specific object by name:
```python
object_description = BelieveObject(names=["milk"])
```

- **Using Types**: If you want to create a designator for all objects of a certain type:
```python
object_description = BelieveObject(types=[ObjectType.MILK, ObjectType.BREAKFAST_CEREAL])
```

#### Step 3: Resolve the Object Designator
Once you have created the object designator description, you can resolve it to get a specific object instance:
```python
resolved_object = object_description.resolve()
print(resolved_object)  # This will print the resolved object details
```

#### Step 4: Iterate Over Matching Objects
If you want to find all objects that match the description, you can use the iterator method:
```python
for obj in object_description:
    print(obj)  # This will print all matching objects
```

### Key Concepts

- **Object Designator**: A symbolic representation of an object that allows the robot to identify and interact with it.
- **Resolution**: The process of converting a designator description into a specific object instance.
- **Iteration**: The ability to loop through all objects that match a given designator description.

### Relevant Functions

- `BelieveObject`: Class used to create object designator descriptions based on names or types.
- `resolve()`: Method that resolves the designator description to a specific object.
- `__iter__()`: Method that allows iteration over all objects matching the designator description.

### Integration
The steps outlined above integrate seamlessly within the PyCram framework, allowing for the creation and manipulation of object designators. This functionality is essential for building complex robotic behaviors that require interaction with various objects in the environment.

## 3. Code Examples and Implementation Guidance

### Code Snippets

#### Example 1: Creating a Designator for a Specific Object
```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType
from pycram.datastructures.pose import Pose
from pycram.designators.object_designator import BelieveObject

# Create a BulletWorld
world = BulletWorld()

# Define objects
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))

# Create an object designator for the milk object
milk_designator = BelieveObject(names=["milk"])

# Resolve the designator to get the specific object
resolved_milk = milk_designator.resolve()
print(f"Resolved Object: {resolved_milk}")
```

#### Example 2: Creating a Designator for Multiple Object Types
```python
# Create an object designator for all food items
food_designator = BelieveObject(types=[ObjectType.MILK, ObjectType.BREAKFAST_CEREAL])

# Resolve the designator to get the specific objects
resolved_food = food_designator.resolve()
print(f"Resolved Food Object: {resolved_food}")

# Iterate over all matching food objects
for food in food_designator:
    print(f"Food Object: {food}")
```

### Explanation
- In Example 1, we create a designator specifically for the milk object by name. The `resolve()` method retrieves the actual object instance.
- In Example 2, we create a designator that matches all food items by type. We can resolve it to get a specific object or iterate through all matching objects.

### Adaptability
These code examples can be easily adapted to create designators for different objects or types by changing the parameters passed to the `BelieveObject` class.

## 4. Framework Integration and Concepts

### Broader Context
Creating object designators is a fundamental aspect of the PyCram framework, enabling robots to interact with their environment intelligently. Object designators serve as the bridge between symbolic representations and concrete object instances, facilitating complex robotic behaviors.

### Essential Components
- **BulletWorld**: The simulated environment where objects are defined and manipulated.
- **Object Designators**: Classes that represent and resolve objects within the BulletWorld.
- **Object Types**: Enumerations that categorize objects, allowing for flexible designator creation.

### Conceptual Understanding
Understanding how object designators work within the PyCram framework is crucial for developing effective robotic applications. By leveraging designators, developers can create more adaptable and intelligent robotic systems capable of interacting with a variety of objects in their environment.

## 5. Best Practices and Considerations

### Implementation Tips
- **Use Descriptive Names**: When creating object designators, use clear and descriptive names to avoid confusion.
- **Test Resolutions**: Always test the resolution of your designators to ensure they return the expected objects.
- **Iterate for Flexibility**: Utilize the iterator functionality to handle multiple objects efficiently.

### Potential Challenges
- **Object Not Found**: If the specified object name or type does not exist in the BulletWorld, the resolution will fail.
- **Ambiguous Descriptions**: Providing vague or overlapping names/types may lead to unexpected results during resolution.

### Solutions
- **Debugging**: Use print statements to debug and verify the objects being created and resolved.
- **Refine Descriptions**: Ensure that object names and types are unique and well-defined to avoid ambiguity.

## Conclusion
Creating an object designator in PyCram is a straightforward process that involves defining the object, creating a designator description, resolving it, and optionally iterating over matching objects. By following the steps outlined in this guide, you can effectively implement object designators in your robotic applications, enhancing their ability to interact with the environment intelligently. = Retrieve[How to create an object designator in PyCram?]Plan: Retrieve the method for navigating the robot to the cereal.
# Navigating a Robot to a Specific Position in PyCram

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to navigate a robot to a specific position within the PyCram framework. This involves utilizing the simulation capabilities of PyCram to control a robot's movements in a virtual environment, specifically within the BulletWorld.

### Explain the Goal
The primary objective of this task is to demonstrate how to programmatically direct a robot to a designated location using PyCram's motion designators and navigation actions. This is significant as it lays the foundation for more complex robotic behaviors, such as object manipulation and interaction with the environment.

### Prerequisites and Setup
Before starting this task, ensure the following prerequisites are met:
- **PyCram Installation:** Ensure that PyCram is installed and properly configured in your environment.
- **ROS Environment:** A running ROS environment is necessary, as PyCram relies on ROS for various functionalities.
- **Robot Description Loaded:** The robot's URDF description must be loaded into the ROS parameter server. This can be done by launching the appropriate launch file, typically `roslaunch pycram ik_and_description`.
- **BulletWorld Initialized:** The BulletWorld must be initialized to simulate the robot's environment.

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Import Required Modules
Begin by importing the necessary modules from PyCram. This includes the BulletWorld, motion designators, and any other relevant classes.

```python
import pycram
from pycram.worlds.bullet_world import BulletWorld
from pycram.designators.motion_designator import MoveMotion
from pycram.process_module import simulated_robot
```

#### Step 2: Initialize the BulletWorld
Create an instance of the BulletWorld to set up the simulation environment.

```python
world = BulletWorld()
```

#### Step 3: Define the Target Position
Specify the target position to which the robot should navigate. This is done using a Pose object, which includes both position and orientation.

```python
from pycram.datastructures.pose import Pose

target_position = Pose([1.0, 0.0, 0.0], [0, 0, 0, 1])  # Example position
```

#### Step 4: Create a Motion Designator
Utilize a motion designator to define the movement action. The MoveMotion designator is used to specify the target pose.

```python
move_action = MoveMotion(target=target_position)
```

#### Step 5: Execute the Navigation Action
Wrap the execution of the navigation action within a context manager that specifies the robot type (simulated or real). This ensures that the action is performed in the correct context.

```python
with simulated_robot:
    move_action.perform()
```

### Key Concepts
- **BulletWorld:** The simulation environment where the robot operates. It allows for rendering, object manipulation, and navigation.
- **Pose:** Represents the robot's position and orientation in 3D space.
- **Motion Designators:** Abstract representations of actions that can be performed by the robot, such as moving to a specific location.

### Relevant Functions
- `BulletWorld()`: Initializes the simulation environment.
- `Pose()`: Creates a pose object with specified position and orientation.
- `MoveMotion()`: Defines a motion action targeting a specific pose.
- `perform()`: Executes the defined action within the specified robot context.

### Integration
These steps integrate seamlessly within the PyCram framework, leveraging its designators and simulation capabilities to facilitate robot navigation.

## 3. Code Examples and Implementation Guidance

### Complete Code Example
Here is a complete code example that encapsulates the entire workflow for navigating a robot to a specific position.

```python
import pycram
from pycram.worlds.bullet_world import BulletWorld
from pycram.designators.motion_designator import MoveMotion
from pycram.process_module import simulated_robot
from pycram.datastructures.pose import Pose

# Step 1: Initialize the BulletWorld
world = BulletWorld()

# Step 2: Define the target position
target_position = Pose([1.0, 0.0, 0.0], [0, 0, 0, 1])  # Target position in 3D space

# Step 3: Create a MoveMotion designator
move_action = MoveMotion(target=target_position)

# Step 4: Execute the navigation action
with simulated_robot:
    move_action.perform()

# Optional: Close the BulletWorld after navigation
world.exit()
```

### Explanation
- **Initialization:** The BulletWorld is initialized to create a simulation environment.
- **Target Definition:** A target position is defined using the Pose class, specifying both the position and orientation.
- **Action Creation:** A MoveMotion action is created targeting the defined position.
- **Execution:** The action is executed within a context that specifies the robot type, ensuring the action is performed correctly.

### Adaptability
This code can be easily adapted for different target positions or orientations by modifying the parameters passed to the Pose constructor. Additionally, it can be extended to include more complex navigation logic, such as obstacle avoidance or multi-step navigation.

## 4. Framework Integration and Concepts

### Broader Context
Navigating a robot to a specific position is a fundamental capability within the PyCram framework. It serves as a building block for more advanced robotic tasks, such as object manipulation, interaction with the environment, and autonomous navigation.

### Essential Components
- **BulletWorld:** Central to the simulation aspect of PyCram, allowing for the testing and visualization of robotic actions.
- **Designators:** Provide a high-level abstraction for defining actions, making it easier to implement complex behaviors.
- **Process Modules:** Facilitate the execution of actions on different robot platforms, whether simulated or real.

### Conceptual Understanding
Understanding how to navigate a robot within PyCram requires familiarity with its architecture, including the relationship between designators, actions, and the simulation environment. This knowledge is crucial for effectively leveraging the framework's capabilities.

## 5. Best Practices and Considerations

### Implementation Tips
- **Test in Simulation First:** Always test navigation actions in the simulated environment before deploying them on a real robot to avoid potential hazards.
- **Use Descriptive Poses:** When defining target positions, use clear and descriptive poses to ensure the robot's movements are predictable and safe.
- **Monitor Robot State:** Implement monitoring mechanisms to check the robot's state during navigation, allowing for adjustments if necessary.

### Potential Challenges
- **Collision Avoidance:** Ensure that the target position is free of obstacles to prevent collisions during navigation.
- **Robot Configuration:** Verify that the robot's configuration allows for movement to the specified position, considering joint limits and kinematics.

### Solutions
- **Obstacle Detection:** Implement sensors or algorithms to detect obstacles in the robot's path and adjust the target position accordingly.
- **Dynamic Replanning:** Use dynamic path planning techniques to adapt the robot's movements in real-time based on environmental changes.

---

By following this comprehensive guide, you should be able to navigate a robot to a specific position within the PyCram framework effectively. This foundational skill will enable you to build more complex robotic behaviors and interactions in the future. = Retrieve[How to navigate the robot to a specific position in PyCram?]Plan: Retrieve the method to locate and pick up the cereal.
# How to Locate an Object and Pick It Up Using the PyCram Framework

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to locate an object within a simulated environment using the PyCram framework and subsequently pick it up using a robot. This involves utilizing various designators to identify the object and execute the pick-up action.

### Explain the Goal
The primary objective is to demonstrate how to effectively use PyCram's designators to navigate a robot to an object, identify it, and perform a pick-up action. This task is significant as it showcases the integration of perception, navigation, and manipulation capabilities within robotic systems, which are essential for autonomous operations in real-world scenarios.

### Prerequisites and Setup
Before starting the task, ensure that you have the following prerequisites:
- **PyCram Framework Installed**: Ensure that the PyCram framework is properly installed and configured in your Python environment.
- **Bullet Physics Engine**: The BulletWorld must be initialized to simulate the environment.
- **Robot Model**: A robot model (e.g., PR2) should be available in the environment.
- **Object Model**: The object to be picked up (e.g., a milk carton) should be defined in the environment.

### Initial Setup Code
```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType, WorldMode
from pycram.datastructures.pose import Pose

# Initialize the BulletWorld
world = BulletWorld(WorldMode.GUI)

# Create the robot and object
pr2 = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))

# Reset the world to ensure a clean state
world.reset_world()
```

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Locate the Object
To locate the object, we will use an `Object Designator` to describe the object we want to interact with. In this case, we will use the `BelieveObject` designator to find the milk carton.

**Key Concepts:**
- **Object Designator**: A mechanism to describe and resolve objects in the environment.
- **BelieveObject**: A specific designator that describes objects that are believed to be present in the environment.

**Code Example:**
```python
from pycram.designators.object_designator import BelieveObject

# Create an object designator for the milk
milk_desig = BelieveObject(names=["milk"])

# Resolve the object designator to get the actual object
resolved_milk = milk_desig.resolve()
print(f"Resolved Milk Object: {resolved_milk}")
```

#### Step 2: Navigate to the Object
Once the object is located, the next step is to navigate the robot to the object's position. We will use the `NavigateAction` designator for this purpose.

**Key Concepts:**
- **NavigateAction**: A designator that allows the robot to move to a specified location.

**Code Example:**
```python
from pycram.designators.action_designator import NavigateAction

# Get the pose of the resolved milk object
milk_pose = resolved_milk.pose

# Create a navigation action to the milk's position
navigate_action = NavigateAction(target_locations=[milk_pose]).resolve()

# Perform the navigation action
from pycram.process_module import simulated_robot

with simulated_robot:
    navigate_action.perform()
```

#### Step 3: Look at the Object
Before picking up the object, it is often useful for the robot to look at it. This can be done using the `LookAtAction`.

**Key Concepts:**
- **LookAtAction**: A designator that allows the robot to orient itself towards a specific target.

**Code Example:**
```python
from pycram.designators.action_designator import LookAtAction

# Create a look-at action for the milk object
look_at_action = LookAtAction(targets=[milk_pose]).resolve()

# Perform the look-at action
with simulated_robot:
    look_at_action.perform()
```

#### Step 4: Pick Up the Object
Now that the robot is oriented towards the object, we can proceed to pick it up using the `PickUpAction` designator.

**Key Concepts:**
- **PickUpAction**: A designator that allows the robot to pick up an object.

**Code Example:**
```python
from pycram.designators.action_designator import PickUpAction
from pycram.datastructures.enums import Arms, Grasp

# Define the arm to use for picking up the object
arm = Arms.RIGHT
grasp = Grasp.RIGHT

# Create a pick-up action for the milk object
pick_up_action = PickUpAction(object_designator_description=milk_desig, arms=[arm], grasps=[grasp]).resolve()

# Perform the pick-up action
with simulated_robot:
    pick_up_action.perform()
```

## 3. Code Examples and Implementation Guidance

### Complete Code Example
Here is the complete code that integrates all the steps discussed above:

```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType, WorldMode, Arms, Grasp
from pycram.datastructures.pose import Pose
from pycram.designators.object_designator import BelieveObject
from pycram.designators.action_designator import NavigateAction, LookAtAction, PickUpAction
from pycram.process_module import simulated_robot

# Initialize the BulletWorld
world = BulletWorld(WorldMode.GUI)

# Create the robot and object
pr2 = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))

# Reset the world to ensure a clean state
world.reset_world()

# Step 1: Locate the Object
milk_desig = BelieveObject(names=["milk"])
resolved_milk = milk_desig.resolve()
print(f"Resolved Milk Object: {resolved_milk}")

# Step 2: Navigate to the Object
milk_pose = resolved_milk.pose
navigate_action = NavigateAction(target_locations=[milk_pose]).resolve()

with simulated_robot:
    navigate_action.perform()

# Step 3: Look at the Object
look_at_action = LookAtAction(targets=[milk_pose]).resolve()

with simulated_robot:
    look_at_action.perform()

# Step 4: Pick Up the Object
pick_up_action = PickUpAction(object_designator_description=milk_desig, arms=[Arms.RIGHT], grasps=[Grasp.RIGHT]).resolve()

with simulated_robot:
    pick_up_action.perform()

# Close the world after the task is completed
world.exit()
```

### Explanation
- **Initialization**: The code initializes the BulletWorld and creates the robot and object.
- **Object Location**: The `BelieveObject` designator is used to locate the milk object.
- **Navigation**: The robot navigates to the milk's position using `NavigateAction`.
- **Look Action**: The robot looks at the milk object to ensure proper alignment for picking it up.
- **Pick-Up Action**: Finally, the robot picks up the milk using the `PickUpAction`.

### Adaptability
This code can be easily adapted to locate and pick up different objects by changing the object name in the `BelieveObject` designator. Additionally, you can modify the arm used for picking up the object by changing the `arms` parameter in the `PickUpAction`.

## 4. Framework Integration and Concepts

### Broader Context
This task fits into the larger PyCram framework by demonstrating how various designators can be combined to achieve complex robotic tasks. The integration of object designators, action designators, and the simulation environment showcases the capabilities of PyCram in robotic manipulation tasks.

### Essential Components
- **BulletWorld**: The simulation environment where the robot and objects exist.
- **Object Designators**: Used to describe and resolve objects in the environment.
- **Action Designators**: Used to define and perform actions that the robot can execute.

### Conceptual Understanding
Understanding how designators work is crucial for effectively using the PyCram framework. Designators abstract the complexity of object and action management, allowing users to focus on high-level task execution.

## 5. Best Practices and Considerations

### Implementation Tips
- **Test in Simulation**: Always test your code in the simulation environment before deploying it on a real robot.
- **Use Logging**: Implement logging to track the robot's actions and any issues that arise during execution.
- **Modular Code**: Keep your code modular by separating different functionalities into functions or classes.

### Potential Challenges
- **Object Not Found**: If the object is not found, ensure that the object name is correct and that it is present in the environment.
- **Navigation Issues**: The robot may encounter obstacles while navigating. Ensure that the environment is clear or implement obstacle avoidance strategies.

### Solutions
- **Debugging**: Use print statements or logging to debug issues related to object resolution or navigation.
- **Adjust Parameters**: If the robot struggles to pick up the object, consider adjusting the arm's position or the grasping parameters.

By following this comprehensive guide, you should be able to effectively locate and pick up objects using the PyCram framework, enhancing your understanding of robotic manipulation tasks. = Retrieve[How to locate an object and pick it up?]Plan: Retrieve the procedure for finding a suitable position to place the cereal on the kitchen island.
# Finding a Suitable Position for Placing an Object in PyCram

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to find a suitable position for placing an object, specifically on a surface like a kitchen island, using the PyCram framework. This involves utilizing location designators and costmaps to identify valid poses where the object can be placed without colliding with other objects in the environment.

### Explain the Goal
The primary objective is to ensure that the object is placed in a stable and reachable position on the kitchen island. This is significant within the PyCram framework as it allows for effective manipulation of objects in a simulated environment, which is crucial for robotic applications such as pick-and-place tasks.

### Prerequisites and Setup
Before starting the task, ensure that you have the following:
- **PyCram Installed:** Make sure you have the PyCram framework installed in your Python environment.
- **Bullet Physics Engine:** The BulletWorld must be initialized to simulate the environment.
- **Environment Setup:** Load the necessary URDF or STL files for the kitchen and the object you want to place (e.g., a milk object).

### Initial Setup Code
```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType, WorldMode
from pycram.datastructures.pose import Pose

# Create a BulletWorld instance
world = BulletWorld(mode=WorldMode.GUI)

# Load the kitchen environment
kitchen = Object("kitchen", ObjectType.ENVIRONMENT, "kitchen.urdf")

# Load the object to be placed (e.g., milk)
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([0, 0, 1]))
```

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Create the Environment
First, you need to create the BulletWorld and load the kitchen environment. This will serve as the base for placing the object.

#### Step 2: Define the Object to be Placed
Instantiate the object you want to place on the kitchen island. In this case, we are using a milk object.

#### Step 3: Create a Semantic Location Designator
To find a suitable position on the kitchen island, you will use a `SemanticCostmapLocation`. This designator will help identify valid poses on the specified surface.

#### Step 4: Resolve the Location
Once the location designator is created, resolve it to get the actual pose where the object can be placed.

### Key Concepts
- **BulletWorld:** The simulation environment where objects are placed and manipulated.
- **Object:** Represents any entity in the BulletWorld, including the kitchen and the milk.
- **Location Designators:** These are used to semantically describe locations in the world, allowing for the identification of valid poses based on specific criteria.

### Relevant Functions
- **SemanticCostmapLocation:** This function is used to create a location designator that finds poses on a semantic entity (like a kitchen island).
- **resolve():** This method is called on the location designator to compute the actual pose.

### Integration
These steps integrate within the PyCram framework by leveraging the object-oriented design of PyCram, where each object and location designator can interact seamlessly to achieve the desired outcome.

## 3. Code Examples and Implementation Guidance

### Step 1: Create the Environment
```python
# Create a BulletWorld instance
world = BulletWorld(mode=WorldMode.GUI)

# Load the kitchen environment
kitchen = Object("kitchen", ObjectType.ENVIRONMENT, "kitchen.urdf")
```

### Step 2: Define the Object to be Placed
```python
# Load the object to be placed (e.g., milk)
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([0, 0, 1]))
```

### Step 3: Create a Semantic Location Designator
```python
from pycram.designators.location_designator import SemanticCostmapLocation
from pycram.designators.object_designator import BelieveObject

# Create a designator for the kitchen
kitchen_desig = BelieveObject(names=["kitchen"]).resolve()

# Create a semantic location designator for the kitchen island surface
location_description = SemanticCostmapLocation(
    urdf_link_name="kitchen_island_surface",
    part_of=kitchen_desig,
    for_object=BelieveObject(names=["milk"]).resolve()
)
```

### Step 4: Resolve the Location
```python
# Resolve the location to find a suitable pose
suitable_pose = location_description.resolve()

# Print the resolved pose
print(f"Suitable pose for placing the milk: {suitable_pose}")
```

### Explanation of Code
- **Creating the BulletWorld:** Initializes the simulation environment.
- **Loading Objects:** The kitchen and milk objects are instantiated from their respective files.
- **Creating the Semantic Location Designator:** This designator is specifically looking for poses on the kitchen island surface.
- **Resolving the Location:** The `resolve()` method computes the actual pose where the milk can be placed.

### Adaptability
The code examples provided can be easily adapted to place different objects on various surfaces by changing the object names and URDF link names accordingly.

## 4. Framework Integration and Concepts

### Broader Context
This task fits into the larger PyCram framework by demonstrating how to manipulate objects within a simulated environment. It showcases the use of designators to semantically describe locations, which is essential for robotic manipulation tasks.

### Essential Components
- **BulletWorld:** The core simulation environment.
- **Object Class:** Represents entities within the simulation.
- **Designators:** Facilitate the identification of valid poses based on semantic criteria.

### Conceptual Understanding
Understanding how these components interact is crucial for effectively using the PyCram framework. The ability to create and resolve location designators allows for dynamic and intelligent placement of objects in a simulated environment.

## 5. Best Practices and Considerations

### Implementation Tips
- **Ensure Proper Object Loading:** Always verify that the URDF or STL files are correctly loaded to avoid runtime errors.
- **Use Semantic Designators:** When dealing with specific surfaces, semantic designators provide a more robust solution for finding valid poses.

### Potential Challenges
- **Collision Detection:** Ensure that the resolved pose does not lead to collisions with other objects in the environment.
- **Dynamic Environments:** If the environment changes, you may need to re-evaluate the poses.

### Solutions
- **Visualize the Environment:** Use the visualization capabilities of BulletWorld to inspect the environment and ensure that the poses are valid.
- **Iterate on Resolved Poses:** If the first resolved pose is not suitable, consider iterating through the generator of poses provided by the location designator.

### Closing the World
Once the task is complete, remember to close the BulletWorld to free up resources.
```python
world.exit()
```

---

This guide provides a comprehensive overview of how to find a suitable position for placing an object in PyCram, specifically on a surface like a kitchen island. By following the outlined steps and utilizing the provided code examples, you can effectively implement this task within the PyCram framework. = Retrieve[How to find a suitable position for placing an object in PyCram, specifically on a surface like a kitchen island?]Plan: Retrieve the method for placing the cereal on the kitchen island.
# Comprehensive Guide to Placing an Object at a Specific Position in PyCram

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to place an object at a specific position within the PyCram framework's BulletWorld simulation. This involves creating an object, defining its desired position, and then moving it to that position within the simulation environment.

### Explain the Goal
The primary objective of this task is to familiarize users with the process of manipulating objects in the BulletWorld, which is essential for simulating robotic interactions and environments. Understanding how to place objects accurately is crucial for tasks such as robotic manipulation, scene setup, and testing algorithms in simulated environments.

### Prerequisites and Setup
Before starting this task, ensure that you have the following prerequisites:
- **PyCram Installed:** Ensure that the PyCram framework is installed and properly configured in your Python environment.
- **ROS Environment:** Make sure that the ROS (Robot Operating System) environment is set up, as PyCram relies on ROS for certain functionalities.
- **Basic Understanding of Python:** Familiarity with Python programming and object-oriented concepts will be beneficial.

To set up the environment, you can run the following command to launch the necessary ROS nodes:

```bash
roslaunch pycram ik_and_description
```

This command initializes the ROS node required for PyCram to function correctly.

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Import Required Modules
To begin, you need to import the necessary modules from the PyCram framework. This includes the `BulletWorld`, `Object`, and `Pose` classes.

```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.pose import Pose
from pycram.datastructures.enums import ObjectType, WorldMode
```

#### Step 2: Create a BulletWorld Instance
Next, create an instance of the `BulletWorld`. This will serve as the simulation environment where you can manipulate objects.

```python
world = BulletWorld(mode=WorldMode.GUI)
```

The `WorldMode.GUI` option allows you to visualize the simulation in a graphical user interface.

#### Step 3: Create an Object
Now, you can create an object that you want to place in the BulletWorld. For this example, let’s create a milk object.

```python
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([0, 0, 1]))
```

In this line:
- `"milk"` is the name of the object.
- `ObjectType.MILK` specifies the type of the object.
- `"milk.stl"` is the filename of the object's mesh.
- `Pose([0, 0, 1])` sets the initial position of the object in the simulation.

#### Step 4: Define the Target Position
To place the object at a specific position, you need to define the target position using the `Pose` class. For example, if you want to place the milk object at coordinates (1, 1, 1):

```python
target_position = Pose([1, 1, 1])
```

#### Step 5: Move the Object to the Target Position
Now that you have defined the target position, you can move the object to that position using the `set_position` method.

```python
milk.set_position(target_position)
```

#### Step 6: Verify the Object's Position
To ensure that the object has been placed correctly, you can retrieve and print its current position.

```python
print(f"Current Position of Milk: {milk.get_position()}")
```

### Key Concepts
- **BulletWorld:** The simulation environment where objects can be created, manipulated, and visualized.
- **Object Class:** Represents any object in the BulletWorld, allowing for manipulation of its properties such as position and orientation.
- **Pose Class:** Represents the position and orientation of an object in 3D space.

### Relevant Functions
- `BulletWorld()`: Initializes the BulletWorld simulation.
- `Object()`: Creates a new object in the simulation.
- `set_position()`: Moves the object to a specified position.
- `get_position()`: Retrieves the current position of the object.

### Integration
These steps integrate seamlessly within the PyCram framework, allowing users to manipulate objects in a simulated environment effectively. The BulletWorld serves as a testing ground for robotic algorithms, making it essential for developers and researchers in robotics.

## 3. Code Examples and Implementation Guidance

### Complete Code Example
Here is the complete code example that encapsulates all the steps discussed:

```python
# Import necessary modules
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.pose import Pose
from pycram.datastructures.enums import ObjectType, WorldMode

# Step 1: Create a BulletWorld instance
world = BulletWorld(mode=WorldMode.GUI)

# Step 2: Create an object (milk)
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([0, 0, 1]))

# Step 3: Define the target position
target_position = Pose([1, 1, 1])

# Step 4: Move the object to the target position
milk.set_position(target_position)

# Step 5: Verify the object's position
print(f"Current Position of Milk: {milk.get_position()}")

# Close the BulletWorld when done
world.exit()
```

### Explanation
- The code begins by importing the necessary modules.
- It creates a BulletWorld instance in GUI mode for visualization.
- A milk object is instantiated and placed at an initial position.
- The target position is defined, and the object is moved to that position.
- Finally, the current position of the object is printed to verify the operation.

### Adaptability
This code can be easily adapted to place different objects at various positions by changing the object type, filename, and target position. For instance, to place a cereal box instead of milk, you would modify the object creation line:

```python
cereal = Object("cereal", ObjectType.BREAKFAST_CEREAL, "breakfast_cereal.stl", pose=Pose([0, 0, 1]))
```

## 4. Framework Integration and Concepts

### Broader Context
Placing objects accurately in the BulletWorld is a fundamental operation in the PyCram framework. It allows users to simulate real-world scenarios where robots interact with various objects. This capability is crucial for developing and testing robotic manipulation algorithms.

### Essential Components
- **BulletWorld:** The core simulation environment.
- **Object Class:** Represents all entities within the BulletWorld.
- **Pose Class:** Manages the spatial representation of objects.

### Conceptual Understanding
Understanding how to manipulate objects in the BulletWorld is essential for anyone working with robotics simulations. It provides a foundation for more complex tasks such as robotic grasping, navigation, and interaction with the environment.

## 5. Best Practices and Considerations

### Implementation Tips
- **Use Enum Types:** When defining object types, prefer using the `ObjectType` enum for consistency and clarity.
- **Check Object Existence:** Before moving an object, ensure it has been created successfully to avoid runtime errors.
- **Visualize Changes:** Utilize the GUI mode of BulletWorld to visualize object placements and interactions.

### Potential Challenges
- **Object Not Found:** If the specified object file (e.g., "milk.stl") is not found, ensure it is located in the correct resource directory.
- **Incorrect Positioning:** If the object does not appear at the expected position, verify the coordinates and ensure they are within the simulation bounds.

### Solutions
- **File Path Issues:** Double-check the file paths for object meshes and ensure they are correctly specified.
- **Debugging:** Use print statements to debug and verify the positions and states of objects during development.

---

This guide provides a comprehensive overview of how to place an object at a specific position in PyCram, detailing each step and providing code examples to facilitate understanding and implementation. By following this guide, users can effectively manipulate objects within the BulletWorld simulation, laying the groundwork for more advanced robotic applications. = Retrieve[How to place an object at a specific position in PyCram?]Plan: Retrieve the method for navigating the robot to the bowl.
# Navigating a Robot to a Specific Position in PyCram

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to navigate a robot to a specific position within the PyCram framework. This involves utilizing the simulation capabilities of PyCram to control a robot's movements in a virtual environment, specifically within the BulletWorld.

### Explain the Goal
The primary objective of this task is to demonstrate how to programmatically direct a robot to a designated location using PyCram's motion designators and navigation actions. This is significant as it lays the foundation for more complex robotic behaviors, such as object manipulation and interaction with the environment.

### Prerequisites and Setup
Before starting this task, ensure the following prerequisites are met:
- **PyCram Installation:** Ensure that PyCram is installed and properly configured in your environment.
- **ROS Environment:** A running ROS environment is necessary, as PyCram relies on ROS for various functionalities.
- **Robot Description Loaded:** The robot's URDF description must be loaded into the ROS parameter server. This can be done by launching the appropriate launch file, typically `roslaunch pycram ik_and_description`.
- **BulletWorld Initialized:** The BulletWorld must be initialized to simulate the robot's environment.

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Import Required Modules
Begin by importing the necessary modules from PyCram. This includes the BulletWorld, motion designators, and any other relevant classes.

```python
import pycram
from pycram.worlds.bullet_world import BulletWorld
from pycram.designators.motion_designator import MoveMotion
from pycram.process_module import simulated_robot
```

#### Step 2: Initialize the BulletWorld
Create an instance of the BulletWorld to set up the simulation environment.

```python
world = BulletWorld()
```

#### Step 3: Define the Target Position
Specify the target position to which the robot should navigate. This is done using a Pose object, which includes both position and orientation.

```python
from pycram.datastructures.pose import Pose

target_position = Pose([1.0, 0.0, 0.0], [0, 0, 0, 1])  # Example position
```

#### Step 4: Create a Motion Designator
Utilize a motion designator to define the movement action. The MoveMotion designator is used to specify the target pose.

```python
move_action = MoveMotion(target=target_position)
```

#### Step 5: Execute the Navigation Action
Wrap the execution of the navigation action within a context manager that specifies the robot type (simulated or real). This ensures that the action is performed in the correct context.

```python
with simulated_robot:
    move_action.perform()
```

### Key Concepts
- **BulletWorld:** The simulation environment where the robot operates. It allows for rendering, object manipulation, and navigation.
- **Pose:** Represents the robot's position and orientation in 3D space.
- **Motion Designators:** Abstract representations of actions that can be performed by the robot, such as moving to a specific location.

### Relevant Functions
- `BulletWorld()`: Initializes the simulation environment.
- `Pose()`: Creates a pose object with specified position and orientation.
- `MoveMotion()`: Defines a motion action targeting a specific pose.
- `perform()`: Executes the defined action within the specified robot context.

### Integration
These steps integrate seamlessly within the PyCram framework, leveraging its designators and simulation capabilities to facilitate robot navigation.

## 3. Code Examples and Implementation Guidance

### Complete Code Example
Here is a complete code example that encapsulates the entire workflow for navigating a robot to a specific position.

```python
import pycram
from pycram.worlds.bullet_world import BulletWorld
from pycram.designators.motion_designator import MoveMotion
from pycram.process_module import simulated_robot
from pycram.datastructures.pose import Pose

# Step 1: Initialize the BulletWorld
world = BulletWorld()

# Step 2: Define the target position
target_position = Pose([1.0, 0.0, 0.0], [0, 0, 0, 1])  # Target position in 3D space

# Step 3: Create a MoveMotion designator
move_action = MoveMotion(target=target_position)

# Step 4: Execute the navigation action
with simulated_robot:
    move_action.perform()

# Optional: Close the BulletWorld after navigation
world.exit()
```

### Explanation
- **Initialization:** The BulletWorld is initialized to create a simulation environment.
- **Target Definition:** A target position is defined using the Pose class, specifying both the position and orientation.
- **Action Creation:** A MoveMotion action is created targeting the defined position.
- **Execution:** The action is executed within a context that specifies the robot type, ensuring the action is performed correctly.

### Adaptability
This code can be easily adapted for different target positions or orientations by modifying the parameters passed to the Pose constructor. Additionally, it can be extended to include more complex navigation logic, such as obstacle avoidance or multi-step navigation.

## 4. Framework Integration and Concepts

### Broader Context
Navigating a robot to a specific position is a fundamental capability within the PyCram framework. It serves as a building block for more advanced robotic tasks, such as object manipulation, interaction with the environment, and autonomous navigation.

### Essential Components
- **BulletWorld:** Central to the simulation aspect of PyCram, allowing for the testing and visualization of robotic actions.
- **Designators:** Provide a high-level abstraction for defining actions, making it easier to implement complex behaviors.
- **Process Modules:** Facilitate the execution of actions on different robot platforms, whether simulated or real.

### Conceptual Understanding
Understanding how to navigate a robot within PyCram requires familiarity with its architecture, including the relationship between designators, actions, and the simulation environment. This knowledge is crucial for effectively leveraging the framework's capabilities.

## 5. Best Practices and Considerations

### Implementation Tips
- **Test in Simulation First:** Always test navigation actions in the simulated environment before deploying them on a real robot to avoid potential hazards.
- **Use Descriptive Poses:** When defining target positions, use clear and descriptive poses to ensure the robot's movements are predictable and safe.
- **Monitor Robot State:** Implement monitoring mechanisms to check the robot's state during navigation, allowing for adjustments if necessary.

### Potential Challenges
- **Collision Avoidance:** Ensure that the target position is free of obstacles to prevent collisions during navigation.
- **Robot Configuration:** Verify that the robot's configuration allows for movement to the specified position, considering joint limits and kinematics.

### Solutions
- **Obstacle Detection:** Implement sensors or algorithms to detect obstacles in the robot's path and adjust the target position accordingly.
- **Dynamic Replanning:** Use dynamic path planning techniques to adapt the robot's movements in real-time based on environmental changes.

---

By following this comprehensive guide, you should be able to navigate a robot to a specific position within the PyCram framework effectively. This foundational skill will enable you to build more complex robotic behaviors and interactions in the future. = Retrieve[How to navigate the robot to a specific position in PyCram?]Plan: Retrieve the method to locate and pick up the bowl.
# How to Locate an Object and Pick It Up Using the PyCram Framework

## 1. Task Overview and Objectives

### Define the Task
The task at hand is to locate an object within a simulated environment using the PyCram framework and subsequently pick it up using a robot. This involves utilizing various designators to identify the object and execute the pick-up action.

### Explain the Goal
The primary objective is to demonstrate how to effectively use PyCram's designators to navigate a robot to an object, detect it, and perform a pick-up action. This task is significant as it showcases the integration of perception and action within robotic systems, allowing for autonomous manipulation of objects in a controlled environment.

### Prerequisites and Setup
Before starting the task, ensure that you have the following prerequisites:
- **PyCram Framework Installed**: Ensure that the PyCram framework is properly installed and configured in your Python environment.
- **Bullet Physics Engine**: The Bullet physics engine should be available as PyCram relies on it for simulating the environment.
- **Robot Model**: A robot model (e.g., PR2) and the object to be manipulated (e.g., milk) should be available in the URDF format.
- **Environment Setup**: Create a BulletWorld instance to simulate the environment.

### Initial Setup Code
```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType, WorldMode
from pycram.datastructures.pose import Pose

# Create a BulletWorld instance
world = BulletWorld(WorldMode.GUI)

# Spawn the robot and the object
robot = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))

# Reset the world to ensure a clean state
world.reset_world()
```

## 2. Detailed Workflow Explanation

### Step-by-Step Guide

#### Step 1: Locate the Object
To locate the object, we will use an `Object Designator` to describe the object we want to interact with. In this case, we will use the `BelieveObject` designator to find the milk.

**Key Concepts:**
- **Object Designator**: This is used to describe objects in the environment based on their names or types.

**Relevant Functions:**
- `BelieveObject`: This function allows us to create a designator that can resolve to the actual object in the BulletWorld.

**Code Example:**
```python
from pycram.designators.object_designator import BelieveObject

# Create an object designator for the milk
milk_desig = BelieveObject(names=["milk"])

# Resolve the designator to get the actual object
resolved_milk = milk_desig.resolve()
print(f"Resolved Milk Object: {resolved_milk}")
```

#### Step 2: Navigate to the Object
Once the object is located, the next step is to navigate the robot to the position of the object. We will use the `NavigateAction` designator for this purpose.

**Key Concepts:**
- **Action Designator**: This is used to describe actions that the robot can perform, such as navigation.

**Relevant Functions:**
- `NavigateAction`: This function allows us to create a designator that describes the navigation action to a specific pose.

**Code Example:**
```python
from pycram.designators.action_designator import NavigateAction

# Get the pose of the milk object
milk_pose = resolved_milk.pose

# Create a navigation action designator
navigate_desig = NavigateAction(target_locations=[milk_pose])

# Resolve and perform the navigation action
with simulated_robot:
    navigate_action = navigate_desig.resolve()
    navigate_action.perform()
```

#### Step 3: Look at the Object
Before picking up the object, it is often useful for the robot to look at it. This can help in aligning the robot's gripper with the object.

**Key Concepts:**
- **LookAtAction**: This action allows the robot to orient itself towards a specific target.

**Code Example:**
```python
from pycram.designators.action_designator import LookAtAction

# Create a look at action designator
look_at_desig = LookAtAction(targets=[milk_pose])

# Resolve and perform the look at action
with simulated_robot:
    look_at_action = look_at_desig.resolve()
    look_at_action.perform()
```

#### Step 4: Pick Up the Object
Now that the robot is oriented towards the object, we can proceed to pick it up using the `PickUpAction` designator.

**Key Concepts:**
- **PickUpAction**: This action designator allows the robot to pick up an object.

**Relevant Functions:**
- `PickUpAction`: This function allows us to create a designator that describes the pick-up action.

**Code Example:**
```python
from pycram.designators.action_designator import PickUpAction
from pycram.datastructures.enums import Arms, Grasp

# Specify the arm to use for picking up the object
arm = Arms.RIGHT
grasp = Grasp.RIGHT

# Create a pick-up action designator
pick_up_desig = PickUpAction(object_designator_description=milk_desig, arms=[arm], grasps=[grasp])

# Resolve and perform the pick-up action
with simulated_robot:
    pick_up_action = pick_up_desig.resolve()
    pick_up_action.perform()
```

## 3. Code Examples and Implementation Guidance

### Complete Code Example
Here is the complete code that integrates all the steps discussed above:

```python
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.datastructures.enums import ObjectType, WorldMode, Arms, Grasp
from pycram.datastructures.pose import Pose
from pycram.designators.object_designator import BelieveObject
from pycram.designators.action_designator import NavigateAction, LookAtAction, PickUpAction
from pycram.process_module import simulated_robot

# Create a BulletWorld instance
world = BulletWorld(WorldMode.GUI)

# Spawn the robot and the object
robot = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
milk = Object("milk", ObjectType.MILK, "milk.stl", pose=Pose([1.3, 1, 0.9]))

# Reset the world to ensure a clean state
world.reset_world()

# Step 1: Locate the Object
milk_desig = BelieveObject(names=["milk"])
resolved_milk = milk_desig.resolve()

# Step 2: Navigate to the Object
milk_pose = resolved_milk.pose
navigate_desig = NavigateAction(target_locations=[milk_pose])

# Step 3: Look at the Object
look_at_desig = LookAtAction(targets=[milk_pose])

# Step 4: Pick Up the Object
arm = Arms.RIGHT
grasp = Grasp.RIGHT
pick_up_desig = PickUpAction(object_designator_description=milk_desig, arms=[arm], grasps=[grasp])

# Perform the actions in a simulated environment
with simulated_robot:
    navigate_action = navigate_desig.resolve()
    navigate_action.perform()
    
    look_at_action = look_at_desig.resolve()
    look_at_action.perform()
    
    pick_up_action = pick_up_desig.resolve()
    pick_up_action.perform()

# Exit the world
world.exit()
```

### Explanation
- **Object Creation**: The code begins by creating a BulletWorld and spawning the robot and the object.
- **Object Location**: The `BelieveObject` designator is used to locate the milk object.
- **Navigation**: The robot navigates to the milk's position using the `NavigateAction`.
- **Look Action**: The robot looks at the milk to align itself for the pick-up.
- **Pick-Up Action**: Finally, the robot picks up the milk using the `PickUpAction`.

### Adaptability
This code can be easily adapted to locate and pick up different objects by changing the object names in the `BelieveObject` designator. Additionally, the arm used for picking up can be modified by changing the `Arms` enumeration.

## 4. Framework Integration and Concepts

### Broader Context
This task fits into the larger PyCram framework by demonstrating how various designators can be combined to achieve complex robotic behaviors. The integration of object detection, navigation, and manipulation showcases the capabilities of the framework in simulating real-world robotic tasks.

### Essential Components
- **Designators**: The core components used in this task are object and action designators, which abstract the complexity of interacting with the environment.
- **BulletWorld**: This is the simulation environment where the robot operates, allowing for realistic physics and interactions.

### Conceptual Understanding
Understanding how designators work is crucial for effectively using the PyCram framework. Designators encapsulate the logic for locating objects and performing actions, allowing developers to focus on higher-level task planning rather than low-level control.

## 5. Best Practices and Considerations

### Implementation Tips
- **Testing in Simulation**: Always test your code in a simulated environment before deploying it on a real robot to avoid potential damage or errors.
- **Incremental Development**: Build your code incrementally, testing each step to ensure that the robot behaves as expected.

### Potential Challenges
- **Object Detection**: If the object is not detected, ensure that the object name matches exactly with what is defined in the BulletWorld.
- **Navigation Issues**: If the robot fails to navigate to the object, check the pose and ensure that there are no obstacles in the way.

### Solutions
- **Debugging**: Use print statements to debug and verify the poses and actions being executed.
- **Adjusting Parameters**: If the robot struggles with picking up the object, consider adjusting the arm's position or the grasping parameters.

By following this comprehensive guide, you should be able to effectively locate and pick up objects using the PyCram framework, leveraging its powerful designators and simulation capabilities. = Retrieve[How to locate an object and pick it up?]Plan: Retrieve the procedure for finding a suitable position to place the bowl on the kitchen island next to the cereal.
Content from: #<IAI_kitchen.urdf>#
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from IAI_kitchen.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="iai_oven_area" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="room_link">    
  </link>
  <!--- FIXME THIS should NOT be here -->
  <link name="sink_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="sink_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/SinkArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 1.3 0"/>
    <child link="sink_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="sink_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 1.03 0.41"/>
    <parent link="sink_area_footprint"/>
    <child link="sink_area"/>
  </joint>
  <link name="sink_area_sink">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Sink.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_sink_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.005 0.47 0.4414"/>
    <parent link="sink_area"/>
    <child link="sink_area_sink"/>
  </joint>
  <link name="sink_area_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.28 0.7 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_right_panel"/>
  </joint>
  <link name="sink_area_trash_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_trash_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_trash_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 0.7 -0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_trash_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_trash_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="sink_area_trash_drawer_main"/>
    <child link="sink_area_trash_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="sink_area_left_upper_drawer_main"/>
    <child link="sink_area_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_middle_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_middle_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_middle_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.11 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_middle_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_middle_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_middle_drawer_main"/>
    <child link="sink_area_left_middle_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_bottom_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_bottom_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_bottom_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 -0.18 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_bottom_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_bottom_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_bottom_drawer_main"/>
    <child link="sink_area_left_bottom_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_dish_washer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasher.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasherDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_dish_washer_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.01 0.1 0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_dish_washer_main"/>
  </joint>
  <joint name="sink_area_dish_washer_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.27 0. -0.325"/>
    <parent link="sink_area_dish_washer_main"/>
    <child link="sink_area_dish_washer_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="sink_area_dish_washer_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.0625 -0.6325 0."/>
    <parent link="sink_area_dish_washer_door"/>
    <child link="sink_area_dish_washer_door_handle"/>
  </joint>
  <link name="oven_area_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="oven_area_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/OvenArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.805 2.5 0"/>
    <child link="oven_area_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="oven_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 0.6 0.755"/>
    <parent link="oven_area_area_footprint"/>
    <child link="oven_area_area"/>
  </joint>
  <link name="oven_area_oven_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenMain.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenPanel.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.415"/>
    <parent link="oven_area_area"/>
    <child link="oven_area_oven_main"/>
  </joint>
  <joint name="oven_area_oven_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.2737 0. -0.2614"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.05876 -0.39803 0."/>
    <parent link="oven_area_oven_door"/>
    <child link="oven_area_oven_door_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.27 0 0.2449"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_panel"/>
  </joint>
  <link name="oven_area_oven_knob_stove_1">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_1_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.21 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_1"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_2">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_2_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.14 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_2"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_3">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_3_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.07 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_3"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_4">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_4_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.0 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_4"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_oven">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_oven_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 0.16 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_oven"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. 0.045 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="oven_area_area_middle_upper_drawer_main"/>
    <child link="oven_area_area_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. -0.315 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="oven_area_area_middle_lower_drawer_main"/>
    <child link="oven_area_area_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_left_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_left_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_left_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_left_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_left_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_left_drawer_main"/>
    <child link="oven_area_area_left_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_right_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_right_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_right_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_right_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_right_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_right_drawer_main"/>
    <child link="oven_area_area_right_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="kitchen_island">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/IslandArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-1.365 0.59 0"/>
    <child link="kitchen_island_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="kitchen_island_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2975 1.1292 0.421"/>
    <parent link="kitchen_island_footprint"/>
    <child link="kitchen_island"/>
  </joint>
  <link name="kitchen_island_stove">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Stove.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_stove_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.025 0.7658 0.4315"/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_stove"/>
  </joint>
  <link name="kitchen_island_left_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 -0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_panel"/>
  </joint>
  <link name="kitchen_island_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_upper_drawer_main"/>
    <child link="kitchen_island_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_left_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_lower_drawer_main"/>
    <child link="kitchen_island_left_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_panel"/>
  </joint>
  <link name="kitchen_island_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_upper_drawer_main"/>
    <child link="kitchen_island_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_lower_drawer_main"/>
    <child link="kitchen_island_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_panel"/>
  </joint>
  <link name="kitchen_island_right_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_upper_drawer_main"/>
    <child link="kitchen_island_right_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_lower_drawer_main"/>
    <child link="kitchen_island_right_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="fridge_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="fridge_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/FridgeArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 -0.76 0"/>
    <child link="fridge_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="fridge_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 .3 0.74"/>
    <parent link="fridge_area_footprint"/>
    <child link="fridge_area"/>
  </joint>
  <link name="fridge_area_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="fridge_area_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.0 -0.4175 "/>
    <parent link="fridge_area"/>
    <child link="fridge_area_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="fridge_area_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="fridge_area_lower_drawer_main"/>
    <child link="fridge_area_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="iai_fridge_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Fridge.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/FridgeDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle90.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="iai_fridge_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="fridge_area"/>
    <child link="iai_fridge_main"/>
  </joint>
  <joint name="iai_fridge_door_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.29 0.3 0.245"/>
    <parent link="iai_fridge_main"/>
    <child link="iai_fridge_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="iai_fridge_door_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 -0.57 0."/>
    <parent link="iai_fridge_door"/>
    <child link="iai_fridge_door_handle"/>
  </joint>
  <!--
  <iai_sink_area name="sink_area" parent="room_link">
    <origin xyz="-5.29 -5.65 0" rpy="0 0 0" />    
  </iai_sink_area>
  
  <iai_oven_area name="oven_area" parent="room_link">
    <origin xyz="-5.27 -6.85 0" rpy="0 0 0" />    
  </iai_oven_area>
  
  
  <iai_kitchen_island name="kitchen_island" parent="room_link">
    <origin xyz="-2.1 -4.94 0" rpy="0 0 ${pi}" />    
  </iai_kitchen_island>
  
  <iai_fridge_area name="fridge_area" parent="room_link">
    <origin xyz="-5.29 -3.59 0" rpy="0 0 0" />    
  </iai_fridge_area>
  -->
</robot>


0 = Retrieve[How can I find a suitable position to place an object next to another object on a surface in PyCram, considering factors like object dimensions and collision avoidance?]Plan: Retrieve the method for placing the bowl on the kitchen island beside the cereal.
Content from: #<IAI_kitchen.urdf>#
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from IAI_kitchen.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="iai_oven_area" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="room_link">    
  </link>
  <!--- FIXME THIS should NOT be here -->
  <link name="sink_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="sink_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/SinkArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 1.3 0"/>
    <child link="sink_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="sink_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 1.03 0.41"/>
    <parent link="sink_area_footprint"/>
    <child link="sink_area"/>
  </joint>
  <link name="sink_area_sink">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Sink.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_sink_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.005 0.47 0.4414"/>
    <parent link="sink_area"/>
    <child link="sink_area_sink"/>
  </joint>
  <link name="sink_area_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.28 0.7 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_right_panel"/>
  </joint>
  <link name="sink_area_trash_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_trash_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_trash_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 0.7 -0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_trash_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_trash_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="sink_area_trash_drawer_main"/>
    <child link="sink_area_trash_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="sink_area_left_upper_drawer_main"/>
    <child link="sink_area_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_middle_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_middle_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_middle_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.11 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_middle_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_middle_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_middle_drawer_main"/>
    <child link="sink_area_left_middle_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_bottom_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_bottom_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_bottom_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 -0.18 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_bottom_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_bottom_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_bottom_drawer_main"/>
    <child link="sink_area_left_bottom_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_dish_washer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasher.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasherDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_dish_washer_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.01 0.1 0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_dish_washer_main"/>
  </joint>
  <joint name="sink_area_dish_washer_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.27 0. -0.325"/>
    <parent link="sink_area_dish_washer_main"/>
    <child link="sink_area_dish_washer_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="sink_area_dish_washer_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.0625 -0.6325 0."/>
    <parent link="sink_area_dish_washer_door"/>
    <child link="sink_area_dish_washer_door_handle"/>
  </joint>
  <link name="oven_area_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="oven_area_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/OvenArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.805 2.5 0"/>
    <child link="oven_area_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="oven_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 0.6 0.755"/>
    <parent link="oven_area_area_footprint"/>
    <child link="oven_area_area"/>
  </joint>
  <link name="oven_area_oven_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenMain.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenPanel.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.415"/>
    <parent link="oven_area_area"/>
    <child link="oven_area_oven_main"/>
  </joint>
  <joint name="oven_area_oven_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.2737 0. -0.2614"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.05876 -0.39803 0."/>
    <parent link="oven_area_oven_door"/>
    <child link="oven_area_oven_door_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.27 0 0.2449"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_panel"/>
  </joint>
  <link name="oven_area_oven_knob_stove_1">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_1_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.21 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_1"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_2">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_2_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.14 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_2"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_3">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_3_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.07 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_3"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_4">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_4_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.0 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_4"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_oven">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_oven_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 0.16 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_oven"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. 0.045 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="oven_area_area_middle_upper_drawer_main"/>
    <child link="oven_area_area_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. -0.315 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="oven_area_area_middle_lower_drawer_main"/>
    <child link="oven_area_area_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_left_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_left_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_left_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_left_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_left_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_left_drawer_main"/>
    <child link="oven_area_area_left_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_right_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_right_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_right_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_right_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_right_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_right_drawer_main"/>
    <child link="oven_area_area_right_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="kitchen_island">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/IslandArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-1.365 0.59 0"/>
    <child link="kitchen_island_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="kitchen_island_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2975 1.1292 0.421"/>
    <parent link="kitchen_island_footprint"/>
    <child link="kitchen_island"/>
  </joint>
  <link name="kitchen_island_stove">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Stove.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_stove_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.025 0.7658 0.4315"/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_stove"/>
  </joint>
  <link name="kitchen_island_left_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 -0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_panel"/>
  </joint>
  <link name="kitchen_island_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_upper_drawer_main"/>
    <child link="kitchen_island_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_left_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_lower_drawer_main"/>
    <child link="kitchen_island_left_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_panel"/>
  </joint>
  <link name="kitchen_island_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_upper_drawer_main"/>
    <child link="kitchen_island_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_lower_drawer_main"/>
    <child link="kitchen_island_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_panel"/>
  </joint>
  <link name="kitchen_island_right_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_upper_drawer_main"/>
    <child link="kitchen_island_right_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_lower_drawer_main"/>
    <child link="kitchen_island_right_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="fridge_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="fridge_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/FridgeArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 -0.76 0"/>
    <child link="fridge_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="fridge_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 .3 0.74"/>
    <parent link="fridge_area_footprint"/>
    <child link="fridge_area"/>
  </joint>
  <link name="fridge_area_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="fridge_area_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.0 -0.4175 "/>
    <parent link="fridge_area"/>
    <child link="fridge_area_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="fridge_area_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="fridge_area_lower_drawer_main"/>
    <child link="fridge_area_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="iai_fridge_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Fridge.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/FridgeDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle90.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="iai_fridge_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="fridge_area"/>
    <child link="iai_fridge_main"/>
  </joint>
  <joint name="iai_fridge_door_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.29 0.3 0.245"/>
    <parent link="iai_fridge_main"/>
    <child link="iai_fridge_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="iai_fridge_door_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 -0.57 0."/>
    <parent link="iai_fridge_door"/>
    <child link="iai_fridge_door_handle"/>
  </joint>
  <!--
  <iai_sink_area name="sink_area" parent="room_link">
    <origin xyz="-5.29 -5.65 0" rpy="0 0 0" />    
  </iai_sink_area>
  
  <iai_oven_area name="oven_area" parent="room_link">
    <origin xyz="-5.27 -6.85 0" rpy="0 0 0" />    
  </iai_oven_area>
  
  
  <iai_kitchen_island name="kitchen_island" parent="room_link">
    <origin xyz="-2.1 -4.94 0" rpy="0 0 ${pi}" />    
  </iai_kitchen_island>
  
  <iai_fridge_area name="fridge_area" parent="room_link">
    <origin xyz="-5.29 -3.59 0" rpy="0 0 0" />    
  </iai_fridge_area>
  -->
</robot>


1 = Retrieve[How to place an object at a specific position in PyCram?]Plan: Close the BulletWorld.
Content from: #<IAI_kitchen.urdf>#
<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from IAI_kitchen.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="iai_oven_area" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="room_link">    
  </link>
  <!--- FIXME THIS should NOT be here -->
  <link name="sink_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="sink_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/SinkArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 1.3 0"/>
    <child link="sink_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="sink_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 1.03 0.41"/>
    <parent link="sink_area_footprint"/>
    <child link="sink_area"/>
  </joint>
  <link name="sink_area_sink">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Sink.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_sink_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.005 0.47 0.4414"/>
    <parent link="sink_area"/>
    <child link="sink_area_sink"/>
  </joint>
  <link name="sink_area_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.28 0.7 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_right_panel"/>
  </joint>
  <link name="sink_area_trash_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_trash_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_trash_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 0.7 -0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_trash_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_trash_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="sink_area_trash_drawer_main"/>
    <child link="sink_area_trash_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.325 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="sink_area_left_upper_drawer_main"/>
    <child link="sink_area_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_middle_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_middle_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_middle_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 0.11 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_middle_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_middle_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_middle_drawer_main"/>
    <child link="sink_area_left_middle_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_left_bottom_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_80_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_left_bottom_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle80.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_left_bottom_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.01 -0.6 -0.18 "/>
    <parent link="sink_area"/>
    <child link="sink_area_left_bottom_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="sink_area_left_bottom_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="sink_area_left_bottom_drawer_main"/>
    <child link="sink_area_left_bottom_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="sink_area_dish_washer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasher.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/DishWasherDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="sink_area_dish_washer_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="sink_area_dish_washer_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.01 0.1 0.035 "/>
    <parent link="sink_area"/>
    <child link="sink_area_dish_washer_main"/>
  </joint>
  <joint name="sink_area_dish_washer_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.27 0. -0.325"/>
    <parent link="sink_area_dish_washer_main"/>
    <child link="sink_area_dish_washer_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="sink_area_dish_washer_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.0625 -0.6325 0."/>
    <parent link="sink_area_dish_washer_door"/>
    <child link="sink_area_dish_washer_door_handle"/>
  </joint>
  <link name="oven_area_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="oven_area_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/OvenArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.805 2.5 0"/>
    <child link="oven_area_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="oven_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 0.6 0.755"/>
    <parent link="oven_area_area_footprint"/>
    <child link="oven_area_area"/>
  </joint>
  <link name="oven_area_oven_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenMain.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_oven_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/OvenPanel.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.415"/>
    <parent link="oven_area_area"/>
    <child link="oven_area_oven_main"/>
  </joint>
  <joint name="oven_area_oven_door_joint" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.2737 0. -0.2614"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_door_handle_joint" type="fixed">
    <origin rpy="-1.57079632679 0 0" xyz="0.05876 -0.39803 0."/>
    <parent link="oven_area_oven_door"/>
    <child link="oven_area_oven_door_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="oven_area_oven_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.27 0 0.2449"/>
    <parent link="oven_area_oven_main"/>
    <child link="oven_area_oven_panel"/>
  </joint>
  <link name="oven_area_oven_knob_stove_1">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_1_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.21 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_1"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_2">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_2_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.14 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_2"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_3">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_3_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.07 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_3"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_stove_4">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_stove_4_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 -0.0 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_stove_4"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_oven_knob_oven">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/oven/Knob.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_oven_knob_oven_joint" type="revolute">
    <origin rpy="0 -1.57079632679 0" xyz="0 0.16 0"/>
    <parent link="oven_area_oven_panel"/>
    <child link="oven_area_oven_knob_oven"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="3.14159265359" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_14.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. 0.045 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.0175"/>
    <parent link="oven_area_area_middle_upper_drawer_main"/>
    <child link="oven_area_area_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_58.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0. -0.315 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.2375"/>
    <parent link="oven_area_area_middle_lower_drawer_main"/>
    <child link="oven_area_area_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_left_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_left_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_left_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_left_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_left_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_left_drawer_main"/>
    <child link="oven_area_area_left_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="oven_area_area_right_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/VDrawer.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="oven_area_area_right_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle130.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="oven_area_area_right_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 0.45 0.06 "/>
    <parent link="oven_area_area"/>
    <child link="oven_area_area_right_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="oven_area_area_right_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3525 0 0"/>
    <parent link="oven_area_area_right_drawer_main"/>
    <child link="oven_area_area_right_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="kitchen_island">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/IslandArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-1.365 0.59 0"/>
    <child link="kitchen_island_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="kitchen_island_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2975 1.1292 0.421"/>
    <parent link="kitchen_island_footprint"/>
    <child link="kitchen_island"/>
  </joint>
  <link name="kitchen_island_stove">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Stove.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_stove_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.025 0.7658 0.4315"/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_stove"/>
  </joint>
  <link name="kitchen_island_left_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 -0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_panel"/>
  </joint>
  <link name="kitchen_island_left_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_upper_drawer_main"/>
    <child link="kitchen_island_left_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_left_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_left_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_left_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 -0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_left_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_left_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_left_lower_drawer_main"/>
    <child link="kitchen_island_left_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_panel"/>
  </joint>
  <link name="kitchen_island_middle_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_upper_drawer_main"/>
    <child link="kitchen_island_middle_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_middle_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_100_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_middle_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle100.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_middle_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_middle_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_middle_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_middle_lower_drawer_main"/>
    <child link="kitchen_island_middle_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_panel">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Panel_60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_panel_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2725 0.8 0.329 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_panel"/>
  </joint>
  <link name="kitchen_island_right_upper_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_upper_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_upper_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 0.114 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_upper_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_upper_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_upper_drawer_main"/>
    <child link="kitchen_island_right_upper_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="kitchen_island_right_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="kitchen_island_right_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="kitchen_island_right_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0025 0.8 -0.176 "/>
    <parent link="kitchen_island"/>
    <child link="kitchen_island_right_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="kitchen_island_right_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="kitchen_island_right_lower_drawer_main"/>
    <child link="kitchen_island_right_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="fridge_area_footprint">
    <sphere_inertia mass="0" radius="0"/>
  </link>
  <link name="fridge_area">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/racks/FridgeArea.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_footprint_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="1.825 -0.76 0"/>
    <child link="fridge_area_footprint"/>
    <parent link="room_link"/>
  </joint>
  <joint name="fridge_area_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.29 .3 0.74"/>
    <parent link="fridge_area_footprint"/>
    <child link="fridge_area"/>
  </joint>
  <link name="fridge_area_lower_drawer_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/drawers/Drawer_60_29.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="fridge_area_lower_drawer_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/Handle60.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="fridge_area_lower_drawer_main_joint" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.0 -0.4175 "/>
    <parent link="fridge_area"/>
    <child link="fridge_area_lower_drawer_main"/>
    <axis xyz="1. 0. 0.0"/>
    <limit effort="300" lower="0" upper="0.48" velocity="10"/>
  </joint>
  <joint name="fridge_area_lower_drawer_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3325 0 0.11"/>
    <parent link="fridge_area_lower_drawer_main"/>
    <child link="fridge_area_lower_drawer_handle"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <link name="iai_fridge_main">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/Fridge.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/misc/FridgeDoor.dae"/>
      </geometry>
    </visual>
  </link>
  <link name="iai_fridge_door_handle">
    <sphere_inertia mass="0" radius="0"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://iai_kitchen/meshes/handles/VHandle90.dae"/>
      </geometry>
    </visual>
  </link>
  <joint name="iai_fridge_main_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="fridge_area"/>
    <child link="iai_fridge_main"/>
  </joint>
  <joint name="iai_fridge_door_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.29 0.3 0.245"/>
    <parent link="iai_fridge_main"/>
    <child link="iai_fridge_door"/>
    <axis xyz="0 0 1"/>
    <limit effort="300" lower="0" upper="1.57079632679" velocity="10"/>
  </joint>
  <joint name="iai_fridge_door_handle_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 -0.57 0."/>
    <parent link="iai_fridge_door"/>
    <child link="iai_fridge_door_handle"/>
  </joint>
  <!--
  <iai_sink_area name="sink_area" parent="room_link">
    <origin xyz="-5.29 -5.65 0" rpy="0 0 0" />    
  </iai_sink_area>
  
  <iai_oven_area name="oven_area" parent="room_link">
    <origin xyz="-5.27 -6.85 0" rpy="0 0 0" />    
  </iai_oven_area>
  
  
  <iai_kitchen_island name="kitchen_island" parent="room_link">
    <origin xyz="-2.1 -4.94 0" rpy="0 0 ${pi}" />    
  </iai_kitchen_island>
  
  <iai_fridge_area name="fridge_area" parent="room_link">
    <origin xyz="-5.29 -3.59 0" rpy="0 0 0" />    
  </iai_fridge_area>
  -->
</robot>


2 = Retrieve[How do I close the BulletWorld in PyCram?]

----
Result:
from pycram.worlds.bullet_world import BulletWorld
from pycram.world_concepts.world_object import Object
from pycram.process_module import simulated_robot
from pycram.designators.motion_designator import *
from pycram.designators.location_designator import *
from pycram.designators.action_designator import *
from pycram.designators.object_designator import *
from pycram.datastructures.enums import ObjectType, Arms, Grasp, WorldMode
from pycram.datastructures.pose import Pose

# Initialize the BulletWorld
world = BulletWorld(WorldMode.GUI)

# Define the kitchen environment and objects
kitchen = Object("kitchen", ObjectType.ENVIRONMENT, "kitchen.urdf")
robot = Object("pr2", ObjectType.ROBOT, "pr2.urdf")
cereal = Object("cereal", ObjectType.BREAKFAST_CEREAL, "breakfast_cereal.stl", pose=Pose([1.4, 1, 0.95]))
bowl = Object("bowl", ObjectType.BOWL, "bowl.stl", pose=Pose([1.4, 0.50, 0.89]), color=[1, 1, 0, 1])

# Create object designators
cereal_desig = ObjectDesignatorDescription(names=["cereal"])
bowl_desig = ObjectDesignatorDescription(names=["bowl"])
kitchen_desig = ObjectDesignatorDescription(names=["kitchen"])
robot_desig = ObjectDesignatorDescription(names=["pr2"]).resolve()

with simulated_robot:
    ParkArmsAction([Arms.BOTH]).resolve().perform()
    MoveTorsoAction([0.25]).resolve().perform()

    # Navigate to the cereal
    pickup_pose_cereal = CostmapLocation(target=cereal_desig.resolve(), reachable_for=robot_desig).resolve()
    pickup_arm_cereal = pickup_pose_cereal.reachable_arms[0]
    NavigateAction(target_locations=[pickup_pose_cereal.pose]).resolve().perform()
    PickUpAction(object_designator_description=cereal_desig, arms=[pickup_arm_cereal], grasps=[Grasp.FRONT]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Place the cereal on the kitchen island
    place_island_cereal = SemanticCostmapLocation("kitchen_island_surface", kitchen_desig.resolve(), cereal_desig.resolve()).resolve()
    place_stand_cereal = CostmapLocation(place_island_cereal.pose, reachable_for=robot_desig, reachable_arm=pickup_arm_cereal).resolve()
    NavigateAction(target_locations=[place_stand_cereal.pose]).resolve().perform()
    PlaceAction(cereal_desig, target_locations=[place_island_cereal.pose], arms=[pickup_arm_cereal]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Navigate to the bowl
    pickup_pose_bowl = CostmapLocation(target=bowl_desig.resolve(), reachable_for=robot_desig).resolve()
    pickup_arm_bowl = pickup_pose_bowl.reachable_arms[0]
    NavigateAction(target_locations=[pickup_pose_bowl.pose]).resolve().perform()
    PickUpAction(object_designator_description=bowl_desig, arms=[pickup_arm_bowl], grasps=[Grasp.FRONT]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

    # Place the bowl on the kitchen island next to the cereal
    place_island_bowl = SemanticCostmapLocation("kitchen_island_surface", kitchen_desig.resolve(), bowl_desig.resolve()).resolve()
    place_stand_bowl = CostmapLocation(place_island_bowl.pose, reachable_for=robot_desig, reachable_arm=pickup_arm_bowl).resolve()
    NavigateAction(target_locations=[place_stand_bowl.pose]).resolve().perform()
    PlaceAction(bowl_desig, target_locations=[place_island_bowl.pose], arms=[pickup_arm_bowl]).resolve().perform()
    ParkArmsAction([Arms.BOTH]).resolve().perform()

# Close the BulletWorld
world.exit()

----
Iterations:
1